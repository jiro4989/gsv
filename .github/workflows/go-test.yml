---
name: go test

"on":
  push:
    branches:
      - main
    paths-ignore:
      - README*
      - LICENSE
      - '**.md'
      - '**.adoc'
  pull_request:
    paths-ignore:
      - README*
      - LICENSE
      - '**.md'
      - '**.adoc'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        go:
          - '1.19'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Check code format
        run: |
          go mod download
          go fmt ./... | tee gofmt.result
          count="$(wc -l < gofmt.result)"
          if [[ "$count" -ne 0 ]]; then
            echo "[ERR] please run 'go fmt ./...'" >&2
            exit 1
          fi
        shell: bash
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - run: go vet
      - run: go build
      - run: go install
      - run: go test -coverprofile=cover.out ./...
      - uses: codecov/codecov-action@v5
